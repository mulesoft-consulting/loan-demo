<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<context:property-placeholder location="api.properties" />
	<apikit:config name="apiConfig" raml="api-sys-application.raml"
		consoleEnabled="true" consolePath="console" doc:name="Router" />
	<http:listener-config name="HTTP_Listener_Configuration"
		host="0.0.0.0" port="${http.port}" doc:name="HTTP Listener Configuration" />
	<db:mysql-config name="MySQL_Configuration" host="${db.hostname}"
		port="${db.port}" user="${db.user}" password="${db.password}"
		database="${db.database}" doc:name="MySQL Configuration" />
	<flow name="main">
		<http:listener config-ref="HTTP_Listener_Configuration"
			doc:name="HTTP" path="/api/*" />
		<apikit:router config-ref="apiConfig" doc:name="APIkit Router" />
		<exception-strategy ref="apiKitGlobalExceptionMapping"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="get:/application:apiConfig">
		<transactional action="ALWAYS_BEGIN" doc:name="Transactional">
			<db:select config-ref="MySQL_Configuration" doc:name="Get Applications">
                <db:parameterized-query><![CDATA[select l.id loan_id, l.loan_amount, l.loan_purpose, l.offer_number, l.first_name, l.middle_initial, l.last_name, l.birth_date, l.email, l.loan_status, l.loan_application_id, f.id financial_id, f.retired, f.self_employed, f.monthly_net_income, f.savings_checkings, e.name, e.hire_date from spring_leaf.loans l left join spring_leaf.financial_information f on f.loan_id = l.id left join employer e on e.financial_information_id = f.id]]></db:parameterized-query>
			</db:select>
<!-- aca -->

			<scatter-gather doc:name="Scatter-Gather">
				<set-payload value="#[paylaod]" doc:name="Set Loans" />
				<db:select config-ref="MySQL_Configuration" doc:name="Get Addresses">
                    <db:parameterized-query><![CDATA[select * from spring_leaf.addresses where loan_id in (#[flowVars.ids])]]></db:parameterized-query>
				</db:select>
				<db:select config-ref="MySQL_Configuration" doc:name="Get Contacts">
					<db:parameterized-query><![CDATA[select * from spring_leaf.contacts where loan_id in (#[flowVars.ids])]]></db:parameterized-query>
				</db:select>

			</scatter-gather>
<!-- aca -->
		</transactional>
	</flow>
	<flow name="get:/application/{loanId}:apiConfig">
		<set-payload
			value="{&#xA;  loan_app: {&#xA;&#x9;  &quot;loan_amount&quot;: 5000,&#xA;&#x9;  &quot;loan_purpose&quot;: &quot;Bill Consolidation&quot;,&#xA;&#x9;  &quot;offerNumber&quot;: &quot;1245&quot;,&#xA;&#x9;  &quot;first_name&quot;: &quot;Mike&quot;,&#xA;&#x9;  &quot;middle_initial&quot;: &quot;S&quot;,&#xA;&#x9;  &quot;last_name&quot;: &quot;Smith&quot;,&#xA;&#x9;  &quot;birth_date&quot;: &quot;04/20/1970&quot;,&#xA;&#x9;  &quot;ssn&quot;: &quot;123-44-5555&quot;,&#xA;&#x9;  &quot;addresses&quot;: [&#xA;&#x9;    {&#xA;&#x9;      &quot;isMailingOnly&quot;: false,&#xA;&#x9;      &quot;address1&quot;: &quot;123 Main Street&quot;,&#xA;&#x9;      &quot;address2&quot;: &quot;&quot;,&#xA;&#x9;      &quot;city&quot;: &quot;Chicago&quot;,&#xA;&#x9;      &quot;state&quot;: &quot;IL&quot;,&#xA;&#x9;      &quot;zip&quot;: 12345,&#xA;&#x9;      &quot;moveIn_date&quot;: &quot;05/2002&quot;&#xA;&#x9;    },&#xA;&#x9;    {&#xA;&#x9;      &quot;isMailingOnly&quot;: true,&#xA;&#x9;      &quot;address1&quot;: &quot;PO Box 1234&quot;,&#xA;&#x9;      &quot;address2&quot;: &quot;&quot;,&#xA;&#x9;      &quot;city&quot;: &quot;Chicago&quot;,&#xA;&#x9;      &quot;state&quot;: &quot;IL&quot;,&#xA;&#x9;      &quot;zip&quot;: 12345&#xA;&#x9;    }&#xA;&#x9;  ],&#xA;&#x9;  &quot;email_address&quot;: &quot;amir.kader@mulesoft.com&quot;,&#xA;&#x9;  &quot;contact_numbers&quot;: [&#xA;&#x9;    {&#xA;&#x9;      &quot;isPrimary&quot;: true,&#xA;&#x9;      &quot;phone_number&quot;: &quot;312-111-2233&quot;,&#xA;&#x9;      &quot;type&quot;: &quot;mobile&quot;&#xA;&#x9;    },&#xA;&#x9;    {&#xA;&#x9;      &quot;isPrimary&quot;: false,&#xA;&#x9;      &quot;phone_number&quot;: &quot;312-222-2233&quot;,&#xA;&#x9;      &quot;type&quot;: &quot;home&quot;&#xA;&#x9;    }&#xA;&#x9;  ],&#xA;&#x9;  &quot;financial_information&quot;: {&#xA;&#x9;    &quot;retired&quot;: false,&#xA;&#x9;    &quot;self_employed&quot;: false,&#xA;&#x9;    &quot;employer&quot;: {&#xA;&#x9;      &quot;name&quot;: &quot;ACME CORP.&quot;,&#xA;&#x9;      &quot;hire_date&quot;: &quot;01/1998&quot;&#xA;&#x9;    },&#xA;&#x9;    &quot;monthly_net_income&quot;: 4000,&#xA;&#x9;    &quot;savings_checkings&quot;: &quot;both&quot;&#xA;&#x9;  }&#xA;&#x9;},&#xA;&#x9;&quot;loan_status&quot;: &quot;pre-approved&quot;,&#xA;&#x9;&quot;loan_application_id&quot;: &quot;1234&quot;&#xA;}"
			doc:name="Set Payload" />
	</flow>
	<flow name="post:/application:application/json:apiConfig">
	
	
	<!-- aca -->

		<transactional action="ALWAYS_BEGIN" doc:name="Transactional">

			<db:insert config-ref="MySQL_Configuration"
				autoGeneratedKeys="true" autoGeneratedKeysColumnNames="loan_id"
				doc:name="Insert Loan">
                <db:parameterized-query><![CDATA[insert into spring_leaf.loans (loan_amount, loan_purpose, offer_number, first_name, middle_initial, last_name, birth_date, ssn, email, loan_status) values(#[payload.loan_amount], #[payload.loan_purpose], #[payload.offer_number], #[payload.first_name], #[payload.middle_name], #[payload.last_name],STR_TO_DATE(#[payload.birth_date],"%m/%d/%Y"), #[payload.ssn],#[payload.email_address],'pre-approved')]]></db:parameterized-query>
			</db:insert>
			
			<!-- aca -->

			<scatter-gather doc:name="Scatter-Gather">
                    <flow-ref name="insertAddress_Flow" doc:name="insertAddress_Flow"/>
                <flow-ref name="insertContacts_Flow" doc:name="insertContacts_Flow"/>
                <flow-ref name="insertFinancialInformation_Flow" doc:name="insertFinancialInformation_Flow"/>

			</scatter-gather>
		</transactional>
		
		<!-- aca -->
		

	</flow>
	<sub-flow name="insertAddress_Flow">
		<foreach collection="#[flowVars.originalRequest.addresses]"
			rootMessageVariableName="address" doc:name="For Each">
			<db:insert config-ref="MySQL_Configuration" doc:name="Insert Address">
				<db:parameterized-query><![CDATA[insert into spring_leaf.addresses(mailing_only, address1, address2, city, state, zip, moved_date, loan_id) 
values(#[address.isMailingOnly],#[address.address1],#[address.address2], #[address.city], #[address.state], #[address.zip], #[address.moveIn_date], #[payload.loan_id])]]></db:parameterized-query>
			</db:insert>
		</foreach>

	</sub-flow>
    <sub-flow name="insertContacts_Flow">
        <foreach collection="#[flowVars.originalRequest.contacts]" rootMessageVariableName="contact" doc:name="For Each">
            <db:insert config-ref="MySQL_Configuration" doc:name="Insert Contacts">
                <db:parameterized-query><![CDATA[insert into spring_leaf.contacts(primary, phone_number, type, loan_id) 
values(#[contact.isPrimary],#[contact.phone_number],#[contact.type], #[payload.loan_id])]]></db:parameterized-query>
            </db:insert>
        </foreach>
    </sub-flow>
    <sub-flow name="insertFinancialInformation_Flow">
        <db:insert config-ref="MySQL_Configuration" autoGeneratedKeys="true" autoGeneratedKeysColumnNames="fi_id" doc:name="Insert financial Information">
            <db:parameterized-query><![CDATA[insert into financial_information(retired, self_eployed, monthly_net_income, savings_checking, loan_id)
values(#[flowVars.financial_information.retired], 
#[flowVars.financial_information.self_employed],
#[flowVars.financial_information.monthly_net_income],
#[flowVars.financial_information.savings_checkings])]]></db:parameterized-query>
        </db:insert>
        <choice doc:name="Choice">
            <when expression="">
                <db:insert config-ref="MySQL_Configuration" doc:name="Insert Employer">
                    <db:parameterized-query><![CDATA[insert into spring_leaf.employer(name, hire_date, financial_information_id)
values(#[flowVars.financial_information.employer.name],#[flowVars.financial_information.employer.hired_date],#[payload[0].fi_id])]]></db:parameterized-query>
                </db:insert>
            </when>
            <otherwise>
                <set-payload value="#[payload]" doc:name="Set Payload"/>
            </otherwise>
        </choice>
    </sub-flow>
	<apikit:mapping-exception-strategy
		name="apiKitGlobalExceptionMapping">
		<apikit:mapping statusCode="404">
			<apikit:exception
				value="org.mule.module.apikit.exception.NotFoundException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload
				value="{ &quot;message&quot;: &quot;Resource not found&quot; }"
				doc:name="Set Payload" />
		</apikit:mapping>
		<apikit:mapping statusCode="405">
			<apikit:exception
				value="org.mule.module.apikit.exception.MethodNotAllowedException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload
				value="{ &quot;message&quot;: &quot;Method not allowed&quot; }"
				doc:name="Set Payload" />
		</apikit:mapping>
		<apikit:mapping statusCode="415">
			<apikit:exception
				value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload
				value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }"
				doc:name="Set Payload" />
		</apikit:mapping>
		<apikit:mapping statusCode="406">
			<apikit:exception
				value="org.mule.module.apikit.exception.NotAcceptableException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }"
				doc:name="Set Payload" />
		</apikit:mapping>
		<apikit:mapping statusCode="400">
			<apikit:exception
				value="org.mule.module.apikit.exception.BadRequestException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }"
				doc:name="Set Payload" />
		</apikit:mapping>
	</apikit:mapping-exception-strategy>
</mule>
